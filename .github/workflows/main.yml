name: Run Tests

on:
  workflow_dispatch:
    inputs:
      testSuites:
        description: 'Test suite to run'
        required: true
        default: 'All'
        type: choice
        options:
        - All
        - Test1
        - Test2
        - Test3
        - Test4
        - Test5

jobs: 
  Prebuild:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ env.TESTS }}
      configurations: ${{ env.CONFIGURATIONS }}
    steps:
      - name: Checkout Github Repo
        uses: actions/checkout@v3

      - id: set-matrix
        run: |      
          configFile="config.json"

          cat $configFile | jq '.[]' | sed -e 's:\":\\":g'


          if [ "${{ inputs.testSuites }}" == "All" ]
          then 
            echo "TESTS=[\"Test1\",\"Test2\",\"Test3\",\"Test4\",\"Test5\"]" >> $GITHUB_ENV 
            echo "CONFIGURATIONS=$(cat $configFile | jq '.[]' | sed -e 's:\":\\":g')" >> $GITHUB_ENV          
            echo "All"
          else
            echo "TESTS=[\"${{ inputs.testSuites }}\"]" >> $GITHUB_ENV
            echo "CONFIGURATIONS=$( echo "[ { "name": "Test3", "dataSources": [ "DataSource=1" ] } ]" )" >> $GITHUB_ENV
            echo "Single"
          fi

        
      - name: Log output
        run: |
          echo ${{ env.TESTS }}
          echo ${{ env.CONFIGURATIONS }}

# echo "CONFIGURATIONS=$( echo "[ { \"name\": \"Test3\", \"dataSources\": [ \"DataSource=1\" ] } ]" )" >> $GITHUB_ENV
# echo "CONFIGURATIONS=$(jq '.[] | select(.name=="${{ inputs.testSuites }}")' $configFile)" >> $GITHUB_ENV


  Run_TestSuite:
    needs: [ 'Prebuild' ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configurations: ${{fromJSON(needs.Prebuild.outputs.configurations)}}
    steps:
      - name: running
        run: echo "running job with ${{ matrix.configurations.name }}"
